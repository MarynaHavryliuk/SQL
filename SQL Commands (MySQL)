Переглянути існуючі бази даних:
SHOW databases;

Створити БД:
CREATE database workers;

Видалити існуючу БД:
DROP database students;

Обрати БД, з якою будемо працювати:
USE workers;

Переглянути існуючі таблиці в БД:
SHOW tables;

Створити таблицю в БД:
CREATE table employees
(id INT(10) NOT NULL PRIMARY KEY,
name VARCHAR(100) NULL,
department VARCHAR(100) NULL,
gender VARCHAR(100) NULL,
age INT(10) NULL,
emp_date DATE);

Переглянути опис таблиці:
DESC employees;

Видалити таблицю:
DROP table employees;

Заповнити таблицю даними:
INSERT INTO employees VALUES (1, 'Anna', 'HR', 'female', 33, '2015-12-22');
INSERT INTO employees VALUES (2, 'Petro', 'Accounting', 'male', 41, '2013-08-17');
INSERT INTO employees VALUES (3, 'Andriy', 'CEO', 'male', 44, '2012-12-01');
INSERT INTO employees VALUES (4, 'Olena', 'Legal', 'female', 35, '2015-07-01');
INSERT INTO employees VALUES (5, 'Maryna', 'HR', 'female', 28, '2019-09-15');
INSERT INTO employees VALUES (6, 'Taras', 'Legal', 'male', 29, '2018-03-29');
INSERT INTO employees VALUES (7, 'Anna', 'Legal', 'female', 38, '2020-02-14');
INSERT INTO employees VALUES (8, 'Mykola', 'Transport', 'male', 26, '2018-07-03');
INSERT INTO employees VALUES (9, 'Taras', 'Legal', 'male', 40, '2020-02-09');
INSERT INTO employees VALUES (10, 'Yuliya', 'Management', 'female', 27, '2017-07-24');

Видалити певне значення з таблиці (видалити запис, де в полі department записано 'Management'):
DELETE FROM employees WHERE department = 'Management';

Видалити всі значення з таблиці:
DELETE FROM employees;

Замінити існуюче значення в таблиці на нове (замінити ім’я 'Yuliya' на 'Victoria'):
UPDATE employees SET name = 'Victoria' WHERE name = 'Yuliya';

Видалити ціле поле в таблиці:
ALTER TABLE employees DROP COLUMN gender;

Додати нове поле в таблицю:
а) додати поле salary INT після поля name:
ALTER TABLE employees ADD COLUMN salary INT AFTER name;

б) додати поле salary INT в кінці таблиці:
ALTER TABLE employees ADD COLUMN salary INT;

в) додати поле salary INT на початку таблиці:
ALTER TABLE employees ADD COLUMN salary INT FIRST;

Замінити існуюче значення в таблиці на нове (заповнити значеннями поле salary INT):
UPDATE employees SET salary = 400 WHERE id = 1;
UPDATE employees SET salary = 550 WHERE id = 2;

Вивести всі значення таблиці:
SELECT * FROM employees;

Вивести значення поля name без дублікатів:
SELECT DISTINCT name FROM employees;

Вивести значення полів name та age з таблиці:
SELECT name, age FROM employees;

Вивести перші 3 записи таблиці:
SELECT * FROM employees LIMIT 3;

Вивести поле id під псевдонімом «порядковий_номер» (тимчасова команда):
SELECT id AS порядковий_номер FROM employees;

Вивести необхідну інформацію: 
а) вивести поля id, name, gender де поле gender = 'female'):
SELECT id, name, gender FROM employees WHERE gender = 'female';

б) вивести поля id, name, age де поле age >= 40):
SELECT id, name, age FROM employees WHERE age >= 40;

в) вивести всі поля, де поле gender = 'female' та age >= 30:
SELECT * FROM employees WHERE gender = 'female' AND age >= 30;

г) вивести поля id, name, gender де поле name = 'Anna' чи name = 'Maryna':
SELECT * FROM employees WHERE name = 'Anna' OR name = 'Maryna';

Вивести поле з таблиці, де значення:
а) закінчується словосполученням «на»:
SELECT name FROM employees WHERE name LIKE '%na';

б) починається літерою «А»:
SELECT name FROM employees WHERE name LIKE 'A%';

в) містить літеру «n» і не важливо скільки символів попереду і позаду:
SELECT name FROM employees WHERE name LIKE '%n%';

г) містить літеру «n» і попереду 1 символ, а позаду 2:
SELECT name FROM employees WHERE name LIKE '_n__';


Вивести значення таблиці, де значення поля в певному діапазоні:
SELECT * FROM employees WHERE id BETWEEN 4 AND 8;

Вивести значення таблиці, де значення поля НЕ в певному діапазоні:
SELECT * FROM employees WHERE NOT id BETWEEN 4 AND 8;

Вивести значення таблиці, де поле відповідає певним заданим значенням:
SELECT * FROM employees WHERE id IN (2, 4, 9);

Вивести необхідні дані таблиці, використовуючи логічні операції:
SELECT * FROM employees WHERE (id < 4 OR id > 8) AND gender = 'male';

Відсортувати всі значення таблиці в алфавітному порядку по заданому полю:
SELECT * FROM employees ORDER BY name;

Відсортувати всі значення таблиці в зворотньому порядку по заданому полю:
а) відсортувати таблицю по полю name:
SELECT * FROM employees ORDER BY name DESC;

б) відсортувати таблицю по полю id від більшого значення до меншого:
SELECT * FROM employees ORDER BY id DESC;

в) відсортувати таблицю по полю age від більшого значення до меншого:
SELECT * FROM employees ORDER BY age DESC;

Вивести середнє значення по полю:
SELECT AVG(age) FROM employees;

Вивести максимальне значення по полю:
SELECT MAX(salary) FROM employees;

Вивести мінімальне значення по полю:
SELECT MIN(emp_date) FROM employees;

Вивести суму значень по полю:
SELECT SUM(age) FROM employees;

Вивести кількість записів заповнених значеннями:
SELECT COUNT(salary) FROM employees;

Створити додаткову таблицю salaries:
CREATE TABLE salaries
(id INT(10) PRIMARY KEY,
salary INT(10) NULL);
INSERT INTO salaries VALUES (1, 500);
INSERT INTO salaries VALUES (2, 400);
INSERT INTO salaries VALUES (3, 700);
INSERT INTO salaries VALUES (4, 350);
INSERT INTO salaries VALUES (5, 480);
INSERT INTO salaries VALUES (6, 390);
INSERT INTO salaries VALUES (7, 240);

Виконати внутрішнє об'єднання двох таблиць:
SELECT employees.name, employees.department, salaries.salary FROM employees JOIN salaries ON employees.id = salaries.id;

Виконати лівостороннє об'єднання двох таблиць:
SELECT employees.id, employees.name, employees.department, salaries.salary FROM employees LEFT JOIN salaries ON employees.id = salaries.id;

Виконати правостороннє об'єднання двох таблиць:
SELECT employees.id, employees.name, employees.department, salaries.salary FROM employees RIGHT JOIN salaries ON employees.id = salaries.id;
